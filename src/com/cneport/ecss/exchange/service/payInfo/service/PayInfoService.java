package com.cneport.ecss.exchange.service.payInfo.service;import java.util.HashMap;import java.util.Map;import org.apache.axis2.saaj.util.IDGenerator;import org.apache.poi.ss.usermodel.Row;import org.apache.poi.ss.usermodel.Sheet;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import com.cneport.ecss.exchange.common.ExcelUtil;import com.cneport.ecss.exchange.service.payInfo.entity.PayInfo;import com.cneport.ecss.exchange.service.payInfo.persistence.PayInfoMapper;@Servicepublic class PayInfoService {    // @Autowired    private PayInfoMapper payInfoMapper;    @Transactional    public void impPayInfo(Sheet sheet, Map<String, String> map)	    throws Exception {	sheet = ExcelUtil.cellTypeTOString(sheet);	String uuid = IDGenerator.generateID();	int countHead = 0;	for (int rowNum = 1; rowNum <= sheet.getLastRowNum(); rowNum++) {	    Row row = sheet.getRow(rowNum);	    if (rowNum == 1) {		PayInfo payInfo = new PayInfo();		payInfo.setPPaymentCode(ExcelUtil.replaceValue(row.getCell(0),			10, "支付企业代码", map));		payInfo.setPPaymentName(ExcelUtil.replaceValue(row.getCell(1),			100, "支付企业名称", map));		payInfo.setPPaymentType(ExcelUtil.replaceValue(row.getCell(2),			1, "支付类型", map));		payInfo.setPPaymentNo(ExcelUtil.replaceValue(row.getCell(3),			40, "支付交易号", map));		payInfo.setPCharge(ExcelUtil.replaceValue(row.getCell(4), 10,			"费用", map));		payInfo.setPCurrency(ExcelUtil.replaceValue(row.getCell(5), 3,			"币制", map));		payInfo.setPCustomerFlag(ExcelUtil.replaceValue(row.getCell(6),			1, "客户身份一致性", map));		payInfo.setPCustomerData(ExcelUtil.replaceValue(row.getCell(7),			100, "消费客户身份信息", map));		payInfo.setPNote(ExcelUtil.replaceValue(row.getCell(8), 1000,			"备注", map));		payInfo.setPIEType(ExcelUtil.replaceValue(row.getCell(9), 10,			"进出口标志", map));		if (ExcelUtil.rowIsNull(payInfo)) {		    return;		}		payInfo.setSeqNo(uuid);		Map param = new HashMap();		param.put("paymentCode", ExcelUtil.replaceValue(row.getCell(0)));		param.put("paymentNo", ExcelUtil.replaceValue(row.getCell(3)));		countHead = this.payInfoMapper.countPayInfo(param);		if (countHead > 0) {		    return;		}		this.payInfoMapper.insertPayInfo(payInfo);	    }	}    }}